<?xml version="1.0"?>
<!-- 考勤相关sql -->
<Scheme>
	<!-- 打卡 -->
	<select id="scanning">
		insert into
		t_attendance(user_id,time,photo,project_id,parent_id,root_id,address,
		longitude,latitude,normal,status)
		values(['#user_id#'],[to_date('#time#','yyyy-MM-dd
		HH24:mi:ss')],['#photo#'],['#project_id#'],['#parent_id#'],['#root_id#'],
		['#address#'],['#longitude#'],['#latitude#'],['#normal#'],['#status#'])
	</select>
	<!-- 更新考勤数据 -->
	<select id="update_scanning">
		update t_attendance
		set
		time=to_date('#time#','yyyy-MM-dd HH24:mi:ss'),
		photo='#photo#',address='#address#',longitude='#longitude#',latitude='#latitude#',normal='#normal#',status='#status#'
		where 1=1
		[and project_id='#project_id#']
		[and
		to_char(time,'yyyy-mm-dd')='#date#']
	</select>
	<!-- 更新考勤状态 -->
	<select id="update_scanning_status">
		update t_attendance
		set normal='#normal#'
		where 1=1
		[and user_id='#user_id#']
		[and project_id='#project_id#']
		[and
		to_char(time,'yyyy-MM-dd')='#date#']
	</select>
	<!-- 查询今天有没有考勤数据 -->
	<select id="query_project_attendance_for_today">
		select * from t_attendance
		where 1=1
		[and
		project_id='#project_id#']
		[and to_char(time,'yyyy-MM-dd')='#date#']
	</select>
	<!-- 查询今天有没有有效的考勤数据 -->
	<select id="query_project_vaild_attendance_for_today">
		select * from t_attendance
		where
		1=1
		and photo!='00000000000000000000000000000000'
		[and
		project_id='#project_id#']
		[and
		to_char(time,'yyyy-MM-dd')='#date#']
	</select>
	<!-- 根据项目查询某时间段内的考勤记录数量 -->
	<select id="sum_count_by_project">
		select count(case when 
		t.photo!='00000000000000000000000000000000' then '0'
		end) as count,
		count(case
		when t.normal =
		'1' then
		'1'
		end) as
		exception_count,
		t.project_id, t.parent_id,
		t.root_id,
		b.project_name
		from
		t_attendance t
		right join t_project b on
		t.project_id=b.project_id
		where
		1=1
		[and
		t.project_id='#project_id#']
		[and
		t.time
		between
		to_date('#start_date#','yyyy-MM-dd')] [and
		to_date('#end_date#','yyyy-MM-dd')] group by t.project_id,
		t.parent_id, t.root_id,
		b.project_name
	</select>
	<!-- 根据父项目查询某时间段内的考勤记录数量 -->
	<select id="sum_count_by_parent">
		select count(case when 
		t.photo!='00000000000000000000000000000000' then '0'
		end) as count,
		count(case
		when t.normal =
		'1' then
		'1'
		end) as
		exception_count,
		t.project_id, t.parent_id,
		t.root_id,
		b.project_name
		from
		t_attendance t
		right join t_project b on
		t.project_id=b.project_id
		where
		1=1
		and
		t.project_id!=t.parent_id
		[and
		t.parent_id='#project_id#']
		[and
		t.time
		between
		to_date('#start_date#','yyyy-MM-dd')] [and
		to_date('#end_date#','yyyy-MM-dd')] group by t.project_id,
		t.parent_id, t.root_id,
		b.project_name
	</select>
	<!-- 根据项目查询某时间段内的考勤记录 -->
	<select id="sum_list_by_project">
		select * from(
		select ROW_NUMBER() OVER (ORDER BY
		t.time asc) rn,
		t.user_id,
		(to_char(t.time,'yyyy-MM-dd
		HH24:mi:ss')) as
		time,
		t.photo,(select url from
		t_attch where
		attch_id=t.photo) as
		photo_path,
		t.project_id,
		t.parent_id, t.root_id,
		t.address, t.longitude,
		t.latitude, t.normal,
		t.status,
		a.user_name,
		a.phone, (select
		project_name
		from t_project where
		1=1
		and
		t.project_id!=t.parent_id
		and
		project_id =
		t.parent_id)
		|| '-' ||
		b.project_name as project_name,
		(select
		project_name
		from t_project where
		project_id =
		t.root_id) as
		root_project_name
		from
		t_attendance t
		right join t_user a on
		t.user_id=a.user_id
		right join
		t_project b on
		t.project_id=b.project_id
		where 1=1
		and
		t.photo!='00000000000000000000000000000000'
		[and
		t.project_id='#project_id#']
		[and t.time
		between
		to_date('#start_date#','yyyy-MM-dd')] [and
		to_date('#end_date#','yyyy-MM-dd')])
		where 1=1 [and rn between
		'#start#'] [and
		'#end#']
	</select>
	<select id="sum_list_by_user">
		select * from(
		select ROW_NUMBER() OVER (ORDER BY
		t.time asc) rn,
		t.user_id,
		(to_char(t.time,'yyyy-MM-dd
		HH24:mi:ss')) as
		time,
		t.photo,(select url from t_attch
		where attch_id=t.photo) as
		photo_path, t.project_id,
		t.parent_id,
		t.root_id,
		t.address,
		t.longitude,
		t.latitude, t.normal,
		t.status,
		a.user_name,
		a.phone,
		(select
		project_name
		from t_project where
		1=1 and
		t.project_id!=t.parent_id
		and
		project_id =
		t.parent_id)
		|| '-' ||
		b.project_name as project_name,
		(select
		project_name
		from t_project where
		project_id =
		t.root_id) as
		root_project_name
		from
		t_attendance t
		right join t_user a on
		t.user_id=a.user_id
		right join
		t_project b on
		t.project_id=b.project_id
		where 1=1
		and
		t.photo!='00000000000000000000000000000000'
		[and t.user_id='#user_id#']
		[and t.time
		between
		to_date('#start_date#','yyyy-MM-dd')] [and
		to_date('#end_date#','yyyy-MM-dd')])
		where 1=1 [and rn between
		'#start#'] [and
		'#end#']
	</select>
	<select id="sum_count_by_user">
		select count(project_id) from t_attendance
		where 1=1
		and
		photo!='00000000000000000000000000000000'
		[and
		user_id='#user_id#']
		[and
		time
		between
		to_date('#start_date#','yyyy-MM-dd')] [and
		to_date('#end_date#','yyyy-MM-dd')]
	</select>
</Scheme>
